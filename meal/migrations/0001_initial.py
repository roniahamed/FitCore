# Generated by Django 5.2.3 on 2025-06-11 08:01

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Food Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('serving_quantity', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Serving Quantity (Numeric)')),
                ('serving_unit', models.CharField(default='g', max_length=50, verbose_name='Serving Unit')),
                ('calories', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Calories')),
                ('protein', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Protein (g)')),
                ('carbohydrates', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Carbohydrates (g)')),
                ('fat', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Fat (g)')),
                ('fiber', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Fiber (g)')),
                ('sugar', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Sugar (g)')),
                ('sodium', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Sodium (mg)')),
                ('food_category', models.CharField(choices=[('FR', 'Fruit'), ('VG', 'Vegetable'), ('GR', 'Grain'), ('PR', 'Protein Food'), ('DR', 'Dairy'), ('FO', 'Fat & Oil'), ('BV', 'Beverage'), ('OT', 'Other')], default='OT', max_length=2, verbose_name='Food Category')),
                ('is_public', models.BooleanField(default=True, verbose_name='Publicly Available')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_added', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_foods', to=settings.AUTH_USER_MODEL, verbose_name='Added by User')),
            ],
            options={
                'verbose_name': 'Food',
                'verbose_name_plural': 'Foods',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Meal Name')),
                ('meal_time_category', models.CharField(choices=[('BF', 'Breakfast'), ('LN', 'Lunch'), ('DN', 'Dinner'), ('SN', 'Snack'), ('PRE', 'Pre-workout'), ('POST', 'Post-workout')], default='SN', max_length=4, verbose_name='Meal Time Category')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_template', models.BooleanField(default=False, verbose_name='Is Template Meal?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meals', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Meal',
                'verbose_name_plural': 'Meals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MealItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_servings', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Number of Servings')),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meal.food', verbose_name='Food')),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meal.meal', verbose_name='Meal')),
            ],
            options={
                'verbose_name': 'Meal Item',
                'verbose_name_plural': 'Meal Items',
                'unique_together': {('meal', 'food')},
            },
        ),
        migrations.AddField(
            model_name='meal',
            name='foods',
            field=models.ManyToManyField(related_name='meals_containing', through='meal.MealItem', to='meal.food', verbose_name='Foods'),
        ),
        migrations.CreateModel(
            name='MealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_calories', models.FloatField()),
                ('protein', models.FloatField()),
                ('carbs', models.FloatField()),
                ('fats', models.FloatField()),
                ('is_ai_generated', models.BooleanField(default=False)),
                ('meal', models.ManyToManyField(related_name='meal', to='meal.meal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mealplan', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
